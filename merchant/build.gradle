apply plugin: 'com.android.application'

def VERSION_CODE = 1
def VERSION_NAME = "1.8.5"
def keystoreFilepath = ''
def keystorePSW = ''
def keystoreAlias = ''
def keystoreAliasPSW = ''
// default keystore file, PLZ config file path in local.properties
def keyfile = file('s.keystore.temp')

Properties properties = new Properties()
// local.properties file in the root director
properties.load(project.rootProject.file('local.properties').newDataInputStream())
keystoreFilepath = properties.getProperty("keystore.path")

if (keystoreFilepath) {
    keystorePSW = properties.getProperty("keystore.password")
    keystoreAlias = properties.getProperty("keystore.alias")
    keystoreAliasPSW = properties.getProperty("keystore.alias_password")
    keyfile = file(keystoreFilepath)
}
repositories {
    flatDir {
        dir 'libs'
    }
}


android {
    signingConfigs {
        config {
            keyAlias 'xiaomajiajiamerchant'
            keyPassword 'qdxmjj'
            storeFile file('keystore.jks')
            storePassword 'qdxmjj'
            println("====== signingConfigs.config ======")
        }
        debug {
            storeFile file('keystore.jks')//签名文件路径
            storePassword "qdxmjj"
            keyAlias "xiaomajiajiamerchant"
            keyPassword "qdxmjj"  //签名密码
            println("====== signingConfigs.debug ======")
        }
    }
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId "com.ruyiruyi.merchant"
        minSdkVersion 15
        targetSdkVersion rootProject.targetSdkVersion
        versionCode VERSION_CODE
        versionName VERSION_NAME
    }
    task clean(type: Delete) {
        delete rootProject.buildDir
    }
    sourceSets {
        main {
            jniLibs.srcDir 'libs'
            jni.srcDirs = []
        }
        instrumentTest.setRoot('tests')
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    buildTypes {
        release {
            //是否混淆
            minifyEnabled false
            //是否移除无用资源
            zipAlignEnabled true
            //混淆配置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名文件存在，则签名
            if (keyfile.exists()) {
                println("WITH -> buildTypes -> release: using jks key")
                signingConfig signingConfigs.config
            } else {
                println("WITH -> buildTypes -> release: using default key")
            }
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为merchant_v1.0_wandoujia.apk
                        def fileName = "ryrymerchant_v${defaultConfig.versionName}_${variant.productFlavors[0].name}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
            signingConfig signingConfigs.config
        }
        debug {
            signingConfig signingConfigs.config
        }
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    android {
        productFlavors {
            kuan {
                manifestPlaceholders = [UMENG_CHANNEL_VALUE: "kuan"]
            }
            xiaomi {
                manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
            }
            qh360 {
                manifestPlaceholders = [UMENG_CHANNEL_VALUE: "qh360"]
            }
            baidu {
                manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]
            }
            wandoujia {
                manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile files('libs/BaiduLBS_Android.jar')
    testCompile 'junit:junit:4.12'
    def system_dependencies = rootProject.ext.system_dependencies
    compile system_dependencies.support_v4
    compile system_dependencies.appcompat_v7
    compile system_dependencies.cardview_v7
    compile system_dependencies.palette_v7
    compile system_dependencies.recyclerview_v7
    compile system_dependencies.design
    compile system_dependencies.xutils
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    /*微信*/
    compile 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    compile project(':rylibrary')
    compile files('libs/BaiduLBS_Android.jar')
    compile files('libs/core-3.2.1.jar')
}
